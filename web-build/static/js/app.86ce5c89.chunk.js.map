{"version":3,"sources":["firebase.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/Listitem.js","screens/HomeScreen.js","screens/Addchat.js","screens/Chatscreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","firestore","auth","LoginScreen","navigation","useEffect","onAuthStateChanged","authUser","replace","useState","email","setEmail","password","setPassword","KeyboardAvoidingView","style","styles","container","source","uri","width","height","View","inputContainer","placeholder","autoFocus","type","value","onChangeText","text","secureTextEntry","containerStyle","button","title","onPress","signInWithEmailAndPassword","catch","error","Alert","alert","message","navigate","Text","credit","StyleSheet","create","flex","alignItems","justifyContent","padding","backgroundColor","marginTop","fontSize","color","marginVertical","RegisterScreen","fullName","setFullName","imageUrl","setImageUrl","register","createUserWithEmailAndPassword","then","user","updateProfile","displayName","photoURL","console","log","h3","marginBottom","onSubmitEditing","raised","Listitem","chatName","id","enterChat","chatPhoto","messages","setMessages","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","TouchableOpacity","activeOpacity","rounded","Content","Title","fontWeight","Subtitle","numberOfLines","ellipsizeMode","HomeScreen","chats","setChats","signOutUser","signOut","addChathandler","useLayoutEffect","setOptions","headerStyle","headerTintColor","headerLeft","marginRight","currentUser","headerRight","flexDirection","name","size","StatusBar","SafeAreaView","ScrollView","scrollView","Addchat","setChatName","setChatPhoto","goBack","createChat","add","leftIcon","marginHorizontal","Chatscreen","route","scrollViewRef","useRef","setMessage","allMessage","setAllMessage","params","scrollCon","TouchableWithoutFeedback","Keyboard","dismiss","contentContainerStyle","paddingTop","ref","onContentSizeChange","current","scrollToEnd","animated","sender","position","bottom","right","receiver","left","footer","TextInput","input","disabled","timeStamp","FieldValue","serverTimestamp","paddingHorizontal","paddingVertical","alignSelf","borderRadius","maxWidth","marginLeft","borderColor","borderWidth","stack","createNativeStackNavigator","globalScreenOptions","App","NavigationContainer","Navigator","screenOptions","Screen","component"],"mappings":"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","file":"static/js/app.86ce5c89.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/auth\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBQVM_g349rjQe84QzOvuE8RAeO2-oZOYY\",\r\n    authDomain: \"reactnative-signal.firebaseapp.com\",\r\n    projectId: \"reactnative-signal\",\r\n    storageBucket: \"reactnative-signal.appspot.com\",\r\n    messagingSenderId: \"567253339221\",\r\n    appId: \"1:567253339221:web:2ef3cddeda88e33af118dc\"\r\n  };\r\n\r\n  let app;\r\n  \r\n  if(firebase.apps.length===0){\r\n    app = firebase.initializeApp(firebaseConfig);\r\n  }else{\r\n    app = firebase.app();\r\n  }\r\n\r\n  const db = app.firestore();\r\n  const auth = firebase.auth();\r\n\r\n  export {db, auth};","import { Alert, KeyboardAvoidingView, StyleSheet, Text, View } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Input, Image } from 'react-native-elements'\r\nimport { auth } from '../firebase'\r\n\r\nconst LoginScreen = ({navigation}) => {\r\n\r\n    useEffect(() => {\r\n       const unsubscribe = auth.onAuthStateChanged((authUser)=>{\r\n            if(authUser){\r\n                navigation.replace('Home')\r\n            }\r\n        });\r\n        return unsubscribe\r\n    }, [])\r\n    \r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const signIn = ()=>{\r\n        auth.signInWithEmailAndPassword(email,password).catch((error)=>{\r\n            Alert.alert('errro',error.message)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView  style={styles.container}>\r\n            <Image source={{ uri: \"https://upload.wikimedia.org/wikipedia/commons/5/56/Logo_Signal..png\" }}\r\n                style={{ width: 100, height: 100 }} />\r\n            <View style={styles.inputContainer}>\r\n                <Input \r\n                placeholder='Email' \r\n                autoFocus \r\n                type='email' \r\n                value={email}\r\n                onChangeText={text=>setEmail(text)}\r\n                />\r\n                <Input \r\n                placeholder='Password' \r\n                secureTextEntry \r\n                type='password' \r\n                value={password}\r\n                onChangeText={text=>setPassword(text)}/>\r\n            </View>\r\n            <Button containerStyle={styles.button} title=\"Login\" onPress={signIn}/>\r\n            <Button  onPress={()=>{navigation.navigate('Register')}} containerStyle={styles.button} type='outline' title=\"Register\" />\r\n            <Text style={styles.credit} >Developer: Sankalp Sachan</Text>\r\n            <View style={{height:10}}/>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        padding:10,\r\n        backgroundColor:'white'\r\n        },\r\n    inputContainer:{\r\n        width:300\r\n    },\r\n    button:{\r\n        marginTop:10,\r\n        width:200\r\n    },\r\n    credit:{\r\n        height:50,\r\n        fontSize:18,\r\n        color:'#868686',\r\n        marginVertical:30\r\n    }\r\n})","import { Alert, KeyboardAvoidingView, StyleSheet, View } from 'react-native'\r\nimport { useState } from 'react'\r\nimport { Button, Input, Image, Text } from 'react-native-elements'\r\nimport { auth } from '../firebase'\r\n\r\nconst RegisterScreen = ({navigation}) => {\r\n\r\n    \r\n\r\n    const [fullName, setFullName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [imageUrl, setImageUrl] = useState(null)\r\n\r\n    const register = ()=>{\r\n        auth\r\n        .createUserWithEmailAndPassword(email,password)\r\n        .then((authUser)=>{\r\n            authUser.user.updateProfile({\r\n                displayName: fullName,\r\n                photoURL:imageUrl || \"https://cdn0.iconfinder.com/data/icons/superuser-web-kit/512/686909-user_people_man_human_head_person-512.png\"\r\n        })\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <KeyboardAvoidingView  style={styles.container}>\r\n            <Text h3 style={{marginBottom:50}} >Create a signal account</Text>\r\n            <View style={styles.inputContainer}>\r\n                <Input\r\n                    placeholder='Full Name'\r\n                    autoFocus\r\n                    type='text'\r\n                    value={fullName}\r\n                    onChangeText={text => setFullName(text)}\r\n                />\r\n                <Input\r\n                    placeholder='Email'\r\n                    type='email'\r\n                    value={email}\r\n                    onChangeText={text => setEmail(text)}\r\n                />\r\n                <Input\r\n                    placeholder='Password'\r\n                    secureTextEntry\r\n                    type='password'\r\n                    value={password}\r\n                    onChangeText={text => setPassword(text)}\r\n                />\r\n                <Input\r\n                    placeholder='Profile Picture url (optional)'\r\n                    type='text'\r\n                    value={imageUrl}\r\n                    onChangeText={text => setImageUrl(text)} \r\n                    onSubmitEditing={register}\r\n                    />\r\n\r\n            </View>\r\n            <Button onPress={register} containerStyle={styles.button} raised title=\"Register\" />\r\n            <Text style={styles.credit} >Developer: Sankalp Sachan</Text>\r\n        </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        padding:10,\r\n        backgroundColor:'white'\r\n    },\r\n    inputContainer:{\r\n        width:300\r\n    },\r\n    button:{\r\n        width:200\r\n    },\r\n    credit:{\r\n        height:50,\r\n        fontSize:18,\r\n        color:'#868686',\r\n        marginVertical:30\r\n    }\r\n})","import { StyleSheet, Text, TouchableOpacity, View } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ListItem, Avatar } from 'react-native-elements'\r\nimport { db } from '../firebase'\r\n\r\nconst Listitem = ({ chatName, id, enterChat, chatPhoto }) => {\r\n\r\n    const [messages, setMessages] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db\r\n            .collection(\"chats\")\r\n            .doc(id)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timeStamp\",\"desc\")\r\n            .onSnapshot((snapshot)=>{\r\n                setMessages(snapshot.docs.map((doc)=>(doc.data())))\r\n            })\r\n\r\n            return unsubscribe;\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <TouchableOpacity onPress={() => { enterChat(chatName, id, chatPhoto) }} activeOpacity={0.6}>\r\n            <ListItem>\r\n                <Avatar\r\n                    rounded\r\n                    source={{ uri: chatPhoto }}\r\n                />\r\n                <ListItem.Content>\r\n                    <ListItem.Title style={{ fontWeight: '800' }} >\r\n                        {chatName}\r\n                    </ListItem.Title>\r\n                    <ListItem.Subtitle numberOfLines={1} ellipsizeMode='tail'>\r\n                        {messages?.[0]?.displayName}: {messages?.[0]?.message}\r\n                    </ListItem.Subtitle>\r\n                </ListItem.Content>\r\n            </ListItem>\r\n        </TouchableOpacity>\r\n    )\r\n}\r\n\r\nexport default Listitem\r\n\r\nconst styles = StyleSheet.create({})","import { SafeAreaView, StyleSheet, Text, View, ScrollView } from 'react-native'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, { useEffect, useLayoutEffect, useState } from 'react'\r\nimport Listitem from '../components/Listitem'\r\nimport { Avatar } from 'react-native-elements'\r\nimport { auth, db } from '../firebase'\r\nimport { TouchableOpacity } from 'react-native'\r\nimport Ant from 'react-native-vector-icons/AntDesign'\r\nimport Oct from 'react-native-vector-icons/Octicons'\r\n\r\n\r\n\r\nconst HomeScreen = ({ navigation }) => {\r\n\r\n    const [chats, setChats] = useState([])\r\n\r\n    const signOutUser = () => {\r\n        auth.signOut().then(() => {\r\n            navigation.replace('Login');\r\n        });\r\n    }\r\n\r\n    const addChathandler = () => {\r\n        navigation.navigate('Addchat')\r\n    }\r\n\r\n    const enterChat = (chatName, id, chatPhoto) => {\r\n        navigation.navigate('Chat', {\r\n            id,\r\n            chatName,\r\n            chatPhoto\r\n        })\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = db.collection('chats').onSnapshot((snapshot) => {\r\n            setChats(snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        })\r\n        return unsubscribe\r\n    }, [])\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: \"Signal\",\r\n            headerStyle: { backgroundColor: 'white' },\r\n            headerTintColor: 'black',\r\n            headerLeft: () => (\r\n                <View style={{ marginRight: 20 }}>\r\n                    <TouchableOpacity onPress={signOutUser}>\r\n                        <Avatar rounded source={{ uri: auth?.currentUser?.photoURL }} />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n                <View style={{ flexDirection: 'row', width: 70, justifyContent: 'space-between' }}>\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <Ant name=\"camerao\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={addChathandler} activeOpacity={0.5}>\r\n                        <Oct name=\"pencil\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n        })\r\n    }, [])\r\n    return (\r\n        <>\r\n            <StatusBar style='dark' />\r\n            <SafeAreaView>\r\n                <ScrollView style={styles.scrollView}>\r\n                    {chats.map(({ id, data: { chatName,chatPhoto } }) => {\r\n                        return <Listitem enterChat={enterChat} chatPhoto={chatPhoto} chatName={chatName} key={id} id={id} />\r\n                    })}\r\n                </ScrollView>\r\n            </SafeAreaView>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollView: {\r\n        height: '100%'\r\n    }\r\n})","import { StyleSheet, TouchableOpacity, View, Text } from 'react-native'\r\nimport { Input, Button } from 'react-native-elements'\r\nimport React, { useLayoutEffect, useState } from 'react'\r\nimport Ant from 'react-native-vector-icons/AntDesign'\r\nimport Fon from 'react-native-vector-icons/FontAwesome'\r\nimport { db } from '../firebase'\r\n\r\nconst Addchat = ({ navigation }) => {\r\n\r\n    const [chatName, setChatName] = useState(\"\")\r\n    const [chatPhoto, setChatPhoto] = useState(\"\")\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: 'Add new chat',\r\n            headerStyle: { backgroundColor: 'white' },\r\n            headerTintColor: 'black',\r\n            headerLeft: () => (\r\n                <TouchableOpacity activeOpacity={0.5} onPress={() => { navigation.goBack() }}>\r\n                    <View style={{ flexDirection: 'row', marginRight: 50, alignItems: 'center' }}>\r\n                        <Ant name=\"arrowleft\" size={18} color=\"black\" />\r\n                        <Text style={{ color: 'black', fontSize: 18,fontWeight:'400' }}>Chats</Text>\r\n                    </View>\r\n                </TouchableOpacity>)\r\n        })\r\n    }, [navigation]);\r\n\r\n    const createChat = async() => { \r\n       await db.collection('chats').add({\r\n            chatName : chatName,\r\n            chatPhoto: chatPhoto.length>0?chatPhoto:\"https://o365reports.com/wp-content/uploads/2016/08/office365-groups-icon.png\"\r\n        }).then(()=>{\r\n            navigation.goBack();\r\n        }).catch((error)=>{\r\n            console.log(error);\r\n        })\r\n     }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Input\r\n                placeholder='Enter chat name'\r\n                value={chatName}\r\n                onChangeText={text => setChatName(text)}\r\n                leftIcon={<Ant name=\"wechat\" style={{marginHorizontal:10}} size={24} color=\"#494b4e\" />}\r\n            />\r\n            <Input\r\n                placeholder='Enter photo url (optional)'\r\n                value={chatPhoto}\r\n                onChangeText={text => setChatPhoto(text)}\r\n                leftIcon={<Fon name=\"photo\" style={{marginHorizontal:10}} size={24} color=\"#494b4e\" />}\r\n            />\r\n            <Button title=\"Create chat\" onPress={createChat} />\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Addchat\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        padding:30,\r\n        backgroundColor:'white'\r\n    }\r\n})","import {\r\n    Keyboard,\r\n    KeyboardAvoidingView, SafeAreaView, ScrollView,\r\n    StyleSheet, Text, TextInput, TouchableOpacity, TouchableWithoutFeedback, View\r\n} from 'react-native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport React, { useLayoutEffect, useState, useRef } from 'react'\r\nimport Mat from 'react-native-vector-icons/MaterialIcons';\r\nimport { Avatar } from 'react-native-elements';\r\nimport Ion from 'react-native-vector-icons/Ionicons';\r\nimport Fea from 'react-native-vector-icons/Feather';\r\nimport { auth, db } from '../firebase';\r\nimport firebase from \"firebase/compat/app\";\r\n\r\n\r\n\r\n\r\nconst Chatscreen = ({ route, navigation }) => {\r\n\r\n    const scrollViewRef = useRef();\r\n    const [message, setMessage] = useState(\"\")\r\n    const [allMessage, setAllMessage] = useState([])\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: route.params.chatName,\r\n            headerStyle: { backgroundColor: 'white' },\r\n            headerTintColor: 'black',\r\n            headerLeft: () => (\r\n                <View style={{ marginRight: 20, flexDirection: 'row', alignItems: 'center' }}>\r\n                    <TouchableOpacity activeOpacity={0.7} onPress={() => { navigation.goBack() }}>\r\n                        <Mat name=\"arrow-back-ios\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                    <Avatar rounded source={{ uri: route.params.chatPhoto }} />\r\n                </View>),\r\n            headerRight: () => (\r\n                <View style={{ flexDirection: 'row', width: 110, justifyContent: 'space-between' }}>\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <Ion name=\"videocam-outline\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity activeOpacity={0.5}>\r\n                        <Ion name=\"call-outline\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity activeOpacity={0.5} >\r\n                        <Fea name=\"more-vertical\" size={24} color=\"black\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )\r\n        })\r\n    }, [navigation,route])\r\n\r\n    useLayoutEffect(() => {\r\n        const unsubscribe = db\r\n            .collection(\"chats\")\r\n            .doc(route.params.id)\r\n            .collection(\"messages\")\r\n            .orderBy(\"timeStamp\", \"asc\")\r\n            .onSnapshot((snapshot) => {\r\n                setAllMessage(snapshot.docs.map((doc) => ({\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                })))\r\n            });\r\n\r\n        return unsubscribe\r\n\r\n    }, [route])\r\n\r\n    const sendMessage = () => {\r\n        Keyboard.dismiss();\r\n        db.collection(\"chats\").doc(route.params.id).collection(\"messages\").add({\r\n            timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            message: message,\r\n            displayName: auth.currentUser.displayName,\r\n            email: auth.currentUser.email,\r\n            photoURL: auth.currentUser.photoURL\r\n        });\r\n        setMessage(\"\");\r\n    }\r\n\r\n    return (\r\n        <SafeAreaView style={styles.scrollCon} >\r\n            <StatusBar style='dark' />\r\n            <KeyboardAvoidingView style={styles.container} >\r\n                <>\r\n                    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                        <ScrollView\r\n                            contentContainerStyle={{ paddingTop: 15 }}\r\n                            ref={scrollViewRef}\r\n                            onContentSizeChange={() => scrollViewRef.current.scrollToEnd({ animated: true })}>\r\n                            {\r\n                                allMessage.map(({ id, data }) => data.email === auth.currentUser.email ?\r\n                                    (\r\n                                        <View key={id} style={styles.sender}>\r\n                                            <Avatar\r\n                                                position='absolute'\r\n                                                bottom={-10}\r\n                                                right={-10}\r\n                                                size={24}\r\n                                                source={{ uri: data.photoURL }} />\r\n                                            <Text style={{ fontSize:15, fontWeight:'500' }}>{data.message}</Text>\r\n                                        </View>\r\n                                    )\r\n                                    : (\r\n                                        <View key={id} style={styles.receiver}>\r\n                                            <Avatar\r\n                                                position='absolute'\r\n                                                bottom={-10}\r\n                                                left={-10}\r\n                                                size={24}\r\n                                                source={{ uri: data.photoURL }} />\r\n                                            <Text style={{fontSize:15, fontWeight:'500',color:'white'}} >{data.message}</Text>\r\n                                            <Text style={{position:'absolute', bottom:-12,left:15, fontSize:12}} >{data.displayName}</Text>\r\n                                        </View>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </ScrollView>\r\n                    </TouchableWithoutFeedback>\r\n                    <View style={styles.footer}>\r\n                        <TextInput\r\n                            placeholder='Type a message'\r\n                            onChangeText={text => setMessage(text)}\r\n                            value={message}\r\n                            style={styles.input}\r\n                        />\r\n                        <TouchableOpacity disabled={message.length===0} onPress={sendMessage} activeOpacity={0.6}>\r\n                            <Ion name=\"send\" size={30} color=\"#2c6bed\" />\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </>\r\n            </KeyboardAvoidingView>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nexport default Chatscreen\r\n\r\nconst styles = StyleSheet.create({\r\n    scrollCon: {\r\n        flex: 1,\r\n        backgroundColor: 'white'\r\n    },\r\n    container: {\r\n        flex: 1\r\n    },\r\n    sender: {\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        backgroundColor: '#dddddd',\r\n        alignSelf: 'flex-end',\r\n        borderRadius: 20,\r\n        marginRight: 15,\r\n        marginBottom: 20,\r\n        maxWidth: '80%',\r\n        position: 'relative'\r\n    },\r\n    receiver: {\r\n        paddingHorizontal: 15,\r\n        paddingVertical: 10,\r\n        backgroundColor: '#2c6bed',\r\n        alignSelf: 'flex-start',\r\n        borderRadius: 20,\r\n        marginLeft: 15,\r\n        marginBottom: 20,\r\n        maxWidth: '80%',\r\n        position: 'relative'\r\n    },\r\n    footer: {\r\n        flexDirection: 'row',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 15,\r\n        justifyContent: 'center',\r\n        marginVertical: 15\r\n    },\r\n    input: {\r\n        bottom: 0,\r\n        height: 50,\r\n        flex: 1,\r\n        fontWeight:'400',\r\n        fontSize:18,\r\n        borderRadius: 20,\r\n        backgroundColor: '#eeeeee',\r\n        paddingHorizontal: 15,\r\n        marginRight: 10,\r\n        paddingVertical: 5,\r\n        borderColor: 'transparent',\r\n        borderWidth: 1,\r\n    }\r\n})","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport Addchat from './screens/Addchat';\nimport Chatscreen from './screens/Chatscreen';\n\nconst stack = createNativeStackNavigator();\n\nconst globalScreenOptions = {\n  headerStyle :{ backgroundColor : '#2c6bed'},\n  headerTintColor: 'white'\n}\n\nexport default function App() {\n  return (\n    <>\n    <StatusBar style='light'/>\n    <NavigationContainer >\n      <stack.Navigator  screenOptions={globalScreenOptions}>\n    <stack.Screen name='Login' component={LoginScreen} />\n    <stack.Screen name='Register' component={RegisterScreen} />\n    <stack.Screen name='Home' component={HomeScreen} />\n    <stack.Screen name='Addchat' component={Addchat} />\n    <stack.Screen name='Chat' component={Chatscreen} />\n      </stack.Navigator>\n    </NavigationContainer>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"sourceRoot":""}